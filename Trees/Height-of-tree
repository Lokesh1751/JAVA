//Approach 1
public static int heightoftree(Node root) {
        Queue<Node> q = new LinkedList<>();
        q.add(root);
        q.add(null);
        int cnt = 0;
        while (!q.isEmpty()) {
            Node cr = q.remove();
            if (cr == null) {
                cnt++;
                if (!q.isEmpty()) {
                    q.add(null);
                }
            } else {
                // System.out.print(cr.data + " ");
                if (cr.left != null) {
                    q.add(cr.left);
                }
                if (cr.right != null) {
                    q.add(cr.right);
                }
            }
        }
        return cnt;
    }

//Approach 2 using recursion

    public static int height(Node root) {
        if (root == null) {
            return 0;
        }
        int lefti = height(root.left);
        int righti = height(root.right);
        int maxi = Math.max(lefti, righti) + 1;
        return maxi;
    }
